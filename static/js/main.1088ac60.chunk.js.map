{"version":3,"sources":["components/ContactList/ContactList.module.css","logo.svg","components/ContactList/ContactList.js","components/ContactsForm/ContactsForm.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactList","className","s","list","this","props","contacts","map","el","name","number","type","id","onClick","onDeleteContacts","Component","ContactsForm","state","nameInputId","shortid","generate","numnerInputId","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","obj","onFormSubmit","resetState","section","onSubmit","htmlFor","onChange","pattern","title","required","Filter","changeFilter","App","filter","addNewContact","find","contact","alert","prevState","deleteContact","e","elem","target","prev","renderContacts","toLowerCase","includes","console","log","localData","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1088ac60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__21Gdf\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Component } from \"react\";\r\nimport s from \"../ContactList/ContactList.module.css\"\r\nexport class ContactList extends Component {\r\n    render() {\r\n        return <section>\r\n            \r\n        <ul className={s.list}>\r\n            {this.props.contacts.map((el) =>\r\n                <li key={el.id}>{el.name}: {el.number}\r\n                    <button\r\n                        type=\"button\"\r\n                        id={el.id}\r\n                        onClick={this.props.onDeleteContacts}\r\n                    >Delete</button>\r\n                </li>\r\n        )}\r\n    </ul>\r\n    </section>\r\n}\r\n}","import { Component } from \"react\";\r\nimport shortid from 'shortid';\r\nimport s from '../ContactsForm/ContactsForm.module.css'\r\nexport class ContactsForm extends Component {\r\n    state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\nnameInputId = shortid.generate();\r\nnumnerInputId = shortid.generate();\r\n  \r\n  handleChange = event => {\r\n    this.setState( {[event.currentTarget.name] : event.currentTarget.value})\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n    const obj = {\r\n      name: this.state.name,\r\n      number: this.state.number\r\n    }\r\n\r\n      this.props.onFormSubmit(obj)\r\n    this.resetState()\r\n  }\r\n  resetState = () => {\r\n    this.setState({name: '',number: ''})\r\n  }\r\n    \r\n    render() {\r\n        return <section className={s.section}>\r\n        <form onSubmit={this.handleSubmit}>\r\n            \r\n    <label htmlFor={this.nameInputId}> Name\r\n      <input\r\n      id={this.nameInputId}\r\n      type=\"text\"\r\n      name=\"name\"\r\n      value={this.state.name}\r\n      onChange={this.handleChange}\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n      required/>\r\n      </label>\r\n          <br />\r\n          \r\n      <label htmlFor={this.numnerInputId}>Number\r\n      <input\r\n        id={this.numnerInputId}\r\n        value={this.state.number}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        onChange={this.handleChange}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        /></label>\r\n      <br />\r\n      <button type='submit'> Add Contact</button>\r\n        </form>\r\n        </section>\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst Filter = ({ value, changeFilter }) => (\r\n  <>\r\n        <label >Find contacts by name</label>\r\n        <br/>\r\n    <input\r\n      \r\n      type=\"text\"\r\n      value={value}\r\n      onChange={changeFilter}\r\n    ></input>\r\n  </>\r\n);\r\n\r\nexport default Filter","import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport shortid from 'shortid';\nimport { ContactList } from './components/ContactList/ContactList.js';\nimport { ContactsForm } from './components/ContactsForm/ContactsForm'\nimport Filter  from \"./components/Filter/Filter\";\n\n\nclass App extends Component {\n  state = {\n  contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: '',\n  }\n  componentDidMount() {\n    console.log('mount')\n    const localData = JSON.parse(localStorage.getItem('data'))\n   if (localData) {\n      this.setState({ contacts: localData });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('data', JSON.stringify(this.state.contacts))\n    }\n\n  }\n  componentWillUnmount() {\n    console.log('unmount')\n  }\n\n\n\n\n\n    addNewContact = ({ name, number }) => {\n    if (!this.state.contacts.find((contact) => contact.name === name)) {\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, { name, number, id: shortid.generate() }],\n      }));\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n    };\n  deleteContact = (e) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((elem) => elem.id !== e.target.id),\n    }));\n  };\n  \n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  onFormSubmit = (obj) => {\n    this.setState(prev => {\n      return {\n        contacts: [...prev.contacts, obj]\n      }\n    })\n  }\n\n\nrenderContacts = () => {\n    const { filter, contacts } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n\n  render() {\n    console.log('render')\n    return (\n  \n  <div className=\"App\">\n        <h1>PhoneBook</h1>\n        <ContactsForm onFormSubmit={this.addNewContact} />\n        <h2>Contacts</h2>\n      \n        \n        <Filter value={this.state.filter} changeFilter={this.changeFilter}/>\n        <ContactList\n          onDeleteContacts={this.deleteContact}\n           contacts={this.renderContacts()}\n        />\n    </div>\n  );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}